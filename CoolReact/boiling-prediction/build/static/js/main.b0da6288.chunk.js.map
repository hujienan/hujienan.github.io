{"version":3,"sources":["index.js"],"names":["scaleNames","c","f","convertFromCtoF","convertFromFtoC","convert","func","temperature","val","parseFloat","Number","isNaN","toString","App","props","_this","Object","D_Perfect_boiling_prediction_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Perfect_boiling_prediction_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Perfect_boiling_prediction_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","scale","isBoiling","handleInputChange","bind","D_Perfect_boiling_prediction_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","setState","celsius","fahrenheit","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","TemperatureInput","onHandleInput","ResultOutput","React","Component","_this2","e","target","value","onChange","ReactDOM","render","document","getElementById"],"mappings":"kNAIMA,SAAa,CACjBC,EAAI,UACJC,EAAI,eAGN,SAASC,EAAgBF,GACvB,OAAY,EAAJA,EAAQ,EAAK,GAGvB,SAASG,EAAgBF,GACvB,OAAkB,GAAVA,EAAI,IAAU,EAGxB,SAASG,EAAQC,EAAMC,GACrB,IAAMC,EAAMC,WAAWF,GACvB,OAAGG,OAAOC,MAAMH,GACP,GAEFF,EAAKE,GAAKI,eAIbC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAQvB,EAAWC,EACnBM,YAAc,GACdiB,WAAY,GAEdT,EAAKU,kBAAoBV,EAAKU,kBAAkBC,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAPRA,iFAUDP,GAEhBU,KAAKU,SAAS,CACZrB,YAAcC,IAEbC,WAAWD,IAAQ,IACpBU,KAAKU,SAAS,CACZJ,WAAY,IAGdN,KAAKU,SAAS,CACZJ,WAAY,qCAOhB,IAAMK,EAAUX,KAAKI,MAAMf,YACrBuB,EAAazB,EAAQF,EAAiBe,KAAKI,MAAMf,aACvD,OACEwB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAD,CACEX,MAAM,IACNhB,YAAasB,EACbM,cAAejB,KAAKO,oBAEtBM,EAAAC,EAAAC,cAACC,EAAD,CACEX,MAAM,IACNhB,YAAauB,EACbK,cAAejB,KAAKO,oBAEtBM,EAAAC,EAAAC,cAACG,EAAD,CACEZ,UAAWN,KAAKI,MAAME,oBA5Cda,IAAMC,WAmDlBF,mLAQF,OANelB,KAAKJ,MAAMU,UACxBO,EAAAC,EAAAC,cAAA,oBAEAF,EAAAC,EAAAC,cAAA,+BALqBI,IAAMC,WAY3BJ,cACJ,SAAAA,EAAYpB,GAAO,IAAAyB,EAAA,OAAAvB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACjBK,EAAAvB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMJ,KACDW,kBAAoBc,EAAKd,kBAAkBC,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAuB,KAFRA,iFAKDC,GACQ,MAArBtB,KAAKJ,MAAMS,OACZL,KAAKJ,MAAMqB,cAAcK,EAAEC,OAAOC,OAEZ,MAArBxB,KAAKJ,MAAMS,OACZL,KAAKJ,MAAMqB,cAAc9B,EAAQD,EAAiBoC,EAAEC,OAAOC,yCAK7D,OACEX,EAAAC,EAAAC,cAAA,gBACEF,EAAAC,EAAAC,cAAA,0BAAkBjC,EAAWkB,KAAKJ,MAAMS,OAAxC,KACAQ,EAAAC,EAAAC,cAAA,SACES,MAAOxB,KAAKJ,MAAMP,YAClBoC,SAAUzB,KAAKO,4BArBMY,IAAMC,WA4BrCM,IAASC,OAAOd,EAAAC,EAAAC,cAACpB,EAAD,MAASiC,SAASC,eAAe","file":"static/js/main.b0da6288.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst scaleNames = {\n  c : 'Celsius',\n  f : 'Fahrenheit'\n}\n\nfunction convertFromCtoF(c) {\n  return (c * 9 / 5) + 32;\n}\n\nfunction convertFromFtoC(f) {\n  return (f - 32) * 5 / 9;\n}\n\nfunction convert(func, temperature) {\n  const val = parseFloat(temperature);\n  if(Number.isNaN(val)) {\n    return '';\n  }\n  return func(val).toString();\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scale : scaleNames.c,\n      temperature : \"\",\n      isBoiling : false\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(val) {\n    \n    this.setState({\n      temperature : val\n    });\n    if(parseFloat(val) >= 100){\n      this.setState({\n        isBoiling : true\n      });\n    }else{\n      this.setState({\n        isBoiling : false\n      });\n    }\n  }\n\n\n  render() {\n    const celsius = this.state.temperature;\n    const fahrenheit = convert(convertFromCtoF, this.state.temperature);\n    return (\n      <div>\n        <TemperatureInput \n          scale=\"c\"\n          temperature={celsius}\n          onHandleInput={this.handleInputChange}\n        />\n        <TemperatureInput \n          scale=\"f\"\n          temperature={fahrenheit}\n          onHandleInput={this.handleInputChange}\n        />\n        <ResultOutput \n          isBoiling={this.state.isBoiling}\n        />\n      </div>\n    )\n  }\n}\n\nclass ResultOutput extends React.Component {\n  render() {\n    const result = this.props.isBoiling ? (\n      <p>Boiling</p>\n    ) : (\n      <p>Not Boiling</p>\n    );\n\n    return result;\n  }\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(e) {\n    if(this.props.scale === 'c') {\n      this.props.onHandleInput(e.target.value)\n    }\n    if(this.props.scale === 'f') {\n      this.props.onHandleInput(convert(convertFromFtoC, e.target.value))\n    }\n  }\n\n  render() {\n    return (\n      <fieldset>\n        <legend>Enter in {scaleNames[this.props.scale]} </legend>\n        <input \n          value={this.props.temperature}\n          onChange={this.handleInputChange}\n        />\n      </fieldset>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}